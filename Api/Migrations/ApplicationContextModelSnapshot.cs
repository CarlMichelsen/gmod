// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("gmod")
                .HasAnnotation("ProductVersion", "10.0.0-preview.6.25358.103")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Database.Entity.ImageContentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("data");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uuid")
                        .HasColumnName("image_id");

                    b.HasKey("Id")
                        .HasName("pk_image_content");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasDatabaseName("ix_image_content_image_id");

                    b.ToTable("image_content", "gmod");
                });

            modelBuilder.Entity("Database.Entity.ImageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("ContentHashCode")
                        .HasColumnType("integer")
                        .HasColumnName("content_hash_code");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("uuid")
                        .HasColumnName("content_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<decimal?>("CreatorSteamId64")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("creator_steam_id64");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("SizeX")
                        .HasColumnType("integer")
                        .HasColumnName("size_x");

                    b.Property<int>("SizeY")
                        .HasColumnType("integer")
                        .HasColumnName("size_y");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("source");

                    b.HasKey("Id")
                        .HasName("pk_image");

                    b.HasIndex("ContentHashCode")
                        .HasDatabaseName("ix_image_content_hash_code");

                    b.ToTable("image", "gmod");
                });

            modelBuilder.Entity("Database.Entity.ImageContentEntity", b =>
                {
                    b.HasOne("Database.Entity.ImageEntity", "Image")
                        .WithOne("Content")
                        .HasForeignKey("Database.Entity.ImageContentEntity", "ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_image_content_image_image_id");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Database.Entity.ImageEntity", b =>
                {
                    b.Navigation("Content");
                });
#pragma warning restore 612, 618
        }
    }
}
